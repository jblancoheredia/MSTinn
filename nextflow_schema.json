{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/jblancoheredia/mstinn/master/nextflow_schema.json",
    "title": "cti/mstinn pipeline parameters",
    "description": "MSTinn stands for Methylation Sequencing TAPS by Innovation Lab",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/mstinn/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        },
        "custom_pipeline_options": {
            "title": "Custom pipeline options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "Custom parameters required for this pipeline run.",
            "properties": {
                "aligner": { "type": "string", "description": "Aligner to use (e.g., bwa-meth)" },
                "refs_dir": { "type": "string", "format": "directory-path", "description": "Directory containing reference files." },
                "seq_center": { "type": "string", "description": "Sequencing center name." },
                "rastair_not": { "type": "string", "description": "Rastair not parameter (comma-separated values)." },
                "rastair_nob": { "type": "string", "description": "Rastair nob parameter (comma-separated values)." },
                "seq_library": { "type": "string", "description": "Sequencing library name." },
                "read_length": { "type": "integer", "description": "Read length." },
                "seq_platform": { "type": "string", "description": "Sequencing platform (e.g., ILLUMINA)." },
                "skip_multiqc": { "type": "boolean", "description": "Skip MultiQC step." },
                "save_reference": { "type": "boolean", "description": "Save reference index files." },
                "run_dedupandrecal": { "type": "boolean", "description": "Run deduplication and recalibration." },
                "run_downsamplings": { "type": "boolean", "description": "Run downsampling steps." },
                "run_umiprocessing": { "type": "boolean", "description": "Run UMI processing." },
                "pymbias_plot_type": { "type": "string", "description": "PyMBias plot type (e.g., pdf)." },
                "pymbias_plot_ax_x": { "type": "integer", "description": "PyMBias plot axis X size." },
                "pymbias_plot_ax_y": { "type": "integer", "description": "PyMBias plot axis Y size." },
                "downsampling_total_reads": { "type": ["integer", "null"], "description": "Total reads for downsampling (null allowed)." },
                "max_memory": { "type": "string", "description": "Maximum memory (e.g., 128 GB)." },
                "max_cpus": { "type": "integer", "description": "Maximum number of CPUs." },
                "max_time": { "type": "string", "description": "Maximum time (e.g., 7d)." },
                "memory": { "type": "string", "description": "Memory per process (e.g., 6 GB)." },
                "cpus": { "type": "integer", "description": "CPUs per process." },
                "run_strctrlvarnts": { "type": "boolean", "description": "Run STR control variants." },
                "run_copynumberalt": { "type": "boolean", "description": "Run copy number alteration analysis." },
                "run_variantdscvry": { "type": "boolean", "description": "Run variant discovery." },
                "run_immunoncology": { "type": "boolean", "description": "Run immuno-oncology analysis." },
                "run_telomerefeats": { "type": "boolean", "description": "Run telomere features analysis." },
                "genome_base": { "type": "string", "format": "directory-path", "description": "Base directory for genome files." },
                "ensembl_version": { "type": "integer", "description": "Ensembl version number." },
                "metdct": { "type": "string", "format": "file-path", "description": "Methylation dictionary file." },
                "metdir": { "type": "string", "format": "directory-path", "description": "Methylation directory." },
                "metref": { "type": "string", "format": "file-path", "description": "Methylation reference file." },
                "metbed": { "type": "string", "format": "file-path", "description": "Methylation BED file." },
                "metfai": { "type": "string", "format": "file-path", "description": "Methylation FASTA index file." },
                "bwadct": { "type": "string", "format": "file-path", "description": "BWA reference dictionary file." },
                "bwaref": { "type": "string", "format": "file-path", "description": "BWA reference file." },
                "bwafai": { "type": "string", "format": "file-path", "description": "BWA FASTA index file." },
                "bwadir": { "type": "string", "format": "directory-path", "description": "BWA directory." },
                "refflat": { "type": "string", "format": "file-path", "description": "RefFlat annotation file." },
                "cytobands": { "type": "string", "format": "file-path", "description": "Cytobands file." },
                "intervals": { "type": "string", "format": "file-path", "description": "Intervals BED file." },
                "kraken2db": { "type": "string", "format": "directory-path", "description": "Kraken2 database directory." },
                "annotations": { "type": "string", "format": "file-path", "description": "Annotations GTF file." },
                "chromosomes": { "type": "string", "format": "file-path", "description": "Chromosome lengths file." },
                "exclude_bed": { "type": "string", "format": "file-path", "description": "Exclude BED file." },
                "known_sites": { "type": "string", "format": "file-path", "description": "Known sites VCF file." },
                "blocklist_bed": { "type": "string", "format": "file-path", "description": "Blocklist BED file." },
                "interval_list": { "type": "string", "format": "file-path", "description": "Intervals list BED file." },
                "pon_directory": { "type": "string", "format": "directory-path", "description": "Panel of normals directory." },
                "known_sites_tbi": { "type": "string", "format": "file-path", "description": "Known sites VCF index file." },
                "protein_domains": { "type": "string", "format": "file-path", "description": "Protein domains GFF3 file." },
                "intervals_bed_gunzip": { "type": "string", "format": "file-path", "description": "Intervals BED gzipped file." },
                "normal_uncollapsed_bam": { "type": "string", "format": "file-path", "description": "Normal uncollapsed BAM file." },
                "normal_uncollapsed_bai": { "type": "string", "format": "file-path", "description": "Normal uncollapsed BAI file." },
                "intervals_bed_gunzip_index": { "type": "string", "format": "file-path", "description": "Intervals BED gzipped index file." }
            }
        },
        "fgbio_umi_parameters": {
            "title": "fgbio UMI parameters",
            "type": "object",
            "fa_icon": "fas fa-vial",
            "description": "Parameters for fgbio UMI processing.",
            "properties": {
                "f2b_umi_qual_tag": { "type": "string", "description": "UMI quality tag (default: QX)" },
                "f2b_umi_tag": { "type": "string", "description": "UMI tag (default: RX)" },
                "f2b_read_structure": { "type": "string", "description": "Read structure (default: 3M2S+T 3M2S+T)" },
                "correct_max_mismatch": { "type": "integer", "description": "Maximum mismatches allowed for correction (default: 1)" },
                "correct_min_distance": { "type": "integer", "description": "Minimum distance for correction (default: 1)" },
                "correct_min_corrected": { "type": "string", "description": "Minimum fraction corrected (default: 0.5)" },
                "group_edits": { "type": "integer", "description": "Number of edits for grouping (default: 0)" },
                "group_strategy": { "type": "string", "description": "Grouping strategy (default: paired)" },
                "group_min_map_q": { "type": "integer", "description": "Minimum mapping quality for grouping (default: 0)" },
                "group_mark_duplicates": { "type": "boolean", "description": "Mark duplicates in grouping (default: true)" },
                "group_include_secondary": { "type": "boolean", "description": "Include secondary alignments in grouping (default: false)" },
                "group_allow_inter_contig": { "type": "boolean", "description": "Allow inter-contig grouping (default: true)" },
                "group_include_non_pf_reads": { "type": "boolean", "description": "Include non-PF reads in grouping (default: false)" },
                "group_include_supplementary": { "type": "boolean", "description": "Include supplementary alignments in grouping (default: false)" },
                "call_min_baseq": { "type": "integer", "description": "Minimum base quality for calling (default: 10)" },
                "call_min_reads": { "type": "string", "description": "Minimum reads for calling (default: 1 1 0)" },
                "call_error_rate_pre_umi": { "type": "integer", "description": "Error rate pre-UMI (default: 40)" },
                "call_error_rate_post_umi": { "type": "integer", "description": "Error rate post-UMI (default: 35)" },
                "filter_min_reads": { "type": "integer", "description": "Minimum reads for filtering (default: 2)" },
                "filter_min_base_quality": { "type": "integer", "description": "Minimum base quality for filtering (default: 1)" },
                "filter_max_base_error_rate": { "type": "number", "description": "Maximum base error rate for filtering (default: 0.1)" },
                "filter_max_read_error_rate": { "type": "number", "description": "Maximum read error rate for filtering (default: 0.025)" },
                "filter_max_no_call_fraction": { "type": "number", "description": "Maximum no-call fraction for filtering (default: 0.1)" }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        },
        {
            "$ref": "#/$defs/custom_pipeline_options"
        },
        {
            "$ref": "#/$defs/fgbio_umi_parameters"
        }
    ]
}
